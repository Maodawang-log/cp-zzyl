<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzyl.mapper.SUserMapper">
    <resultMap id="BaseResultMap" type="com.zzyl.entity.User">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="open_id" jdbcType="VARCHAR" property="openId" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="user_type" jdbcType="VARCHAR" property="userType" />
        <result column="avatar" jdbcType="VARCHAR" property="avatar" />
        <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="real_name" jdbcType="VARCHAR" property="realName" />
        <result column="mobile" jdbcType="VARCHAR" property="mobile" />
        <result column="sex" jdbcType="CHAR" property="sex" />
        <result column="data_state" jdbcType="CHAR" property="dataState" />
        <result column="dept_no" jdbcType="VARCHAR" property="deptNo" />
        <result column="post_no" jdbcType="VARCHAR" property="postNo" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="create_by" jdbcType="BIGINT" property="createBy" />
        <result column="update_by" jdbcType="BIGINT" property="updateBy" />
        <result column="is_leader" jdbcType="INTEGER" property="isLeader" />
        <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    </resultMap>

    <sql id="Base_Column_List">
        id, username, open_id, password, user_type, avatar, nick_name, email, real_name,
    mobile, sex, data_state, dept_no, post_no, create_time, update_time, remark, create_by,
    update_by, is_leader, is_delete
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sys_user
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.zzyl.entity.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_user (username, open_id, password,
        user_type, avatar, nick_name,
        email, real_name, mobile,
        sex, data_state, dept_no, post_no,
        create_time, update_time, remark,
        create_by, update_by, is_leader,
        is_delete)
        values (#{username,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{userType,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
        #{sex,jdbcType=CHAR}, #{dataState,jdbcType=CHAR}, #{deptNo,jdbcType=VARCHAR}, #{postNo,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR},
        #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}, #{isLeader,jdbcType=INTEGER},
        #{isDelete,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.zzyl.entity.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="openId != null">
                open_id,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="userType != null">
                user_type,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="dataState != null">
                data_state,
            </if>
            <if test="deptNo != null">
                dept_no,
            </if>
            <if test="postNo != null">
                post_no,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="isLeader != null">
                is_leader,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="openId != null">
                #{openId,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=CHAR},
            </if>
            <if test="dataState != null">
                #{dataState,jdbcType=CHAR},
            </if>
            <if test="deptNo != null">
                #{deptNo,jdbcType=VARCHAR},
            </if>
            <if test="postNo != null">
                #{postNo,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="isLeader != null">
                #{isLeader,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zzyl.entity.User">
        update sys_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="openId != null">
                open_id = #{openId,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="dataState != null">
                data_state = #{dataState,jdbcType=CHAR},
            </if>
            <if test="deptNo != null">
                dept_no = #{deptNo,jdbcType=VARCHAR},
            </if>
            <if test="postNo != null">
                post_no = #{postNo,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="isLeader != null">
                is_leader = #{isLeader,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zzyl.entity.User">
        update sys_user
        set username = #{username,jdbcType=VARCHAR},
            open_id = #{openId,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            user_type = #{userType,jdbcType=VARCHAR},
            avatar = #{avatar,jdbcType=VARCHAR},
            nick_name = #{nickName,jdbcType=VARCHAR},
            email = #{email,jdbcType=VARCHAR},
            real_name = #{realName,jdbcType=VARCHAR},
            mobile = #{mobile,jdbcType=VARCHAR},
            sex = #{sex,jdbcType=CHAR},
            data_state = #{dataState,jdbcType=CHAR},
            dept_no = #{deptNo,jdbcType=VARCHAR},
            post_no = #{postNo,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            remark = #{remark,jdbcType=VARCHAR},
            create_by = #{createBy,jdbcType=BIGINT},
            update_by = #{updateBy,jdbcType=BIGINT},
            is_leader = #{isLeader,jdbcType=INTEGER},
            is_delete = #{isDelete,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="java.util.List" useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          这个节点为代码生成工具生成，请不要修改!
          @author hewei
        -->
        insert into sys_user (username, open_id, password, user_type, avatar, nick_name, email, real_name, mobile, sex, data_state, dept_no, post_no, create_time, update_time, remark, create_by, update_by, is_leader, is_delete)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.username,jdbcType=VARCHAR}, #{item.openId,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, #{item.userType,jdbcType=VARCHAR}, #{item.avatar,jdbcType=VARCHAR}, #{item.nickName,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, #{item.realName,jdbcType=VARCHAR}, #{item.mobile,jdbcType=VARCHAR}, #{item.sex,jdbcType=CHAR}, #{item.dataState,jdbcType=CHAR}, #{item.deptNo,jdbcType=VARCHAR}, #{item.postNo,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.remark,jdbcType=VARCHAR}, #{item.createBy,jdbcType=BIGINT}, #{item.updateBy,jdbcType=BIGINT}, #{item.isLeader,jdbcType=INTEGER}, #{item.isDelete,jdbcType=INTEGER})
        </foreach>
    </insert>

    <resultMap id="UserVoResultMap" type="com.zzyl.vo.UserVo">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="userType" column="user_type"/>
        <result property="nickName" column="nick_name"/>
        <result property="post" column="post"/>
        <result property="dept" column="dept"/>
        <result property="email" column="email"/>
        <result property="realName" column="real_name"/>
        <result property="mobile" column="mobile"/>
        <result property="sex" column="sex"/>
        <result property="remark" column="remark"/>
        <result property="openId" column="open_id"/>
        <result property="deptNo" column="dept_no"/>
        <result property="postNo" column="postNo"/>
        <result property="roleId" column="role_id"/>
        <result property="userToken" column="user_token"/>
        <result property="dataState" column="data_state"/>
        <result property="postName" column="postName"/>
        <result property="deptName" column="deptName"/>
        <collection property="roleVoIds" ofType="java.lang.String">
            <result column="roleIds"></result>
        </collection>
        <collection property="roleLabels" ofType="java.lang.String">
            <result column="roleLabel"></result>
        </collection>
    </resultMap>

    <select id="selectPage" resultMap="UserVoResultMap">
        select u.id, u.username, u.password, u.user_type, u.nick_name, u.email, u.real_name,
        u.mobile, u.sex, u.remark, u.open_id, u.dept_no as userDeptNo, u.post_no as userPostNo,
        u.data_state, u.create_time, u.update_time,
        p.post_no as postNo, p.post_name as postName,
        d.dept_no as deptNo, d.dept_name as deptName,
        r.id as roleIds, r.role_name as roleLabel
        from sys_user u
        left join sys_dept d on u.dept_no = d.dept_no
        left join sys_post p on u.post_no = p.post_no
        left join sys_user_role ur on u.id = ur.user_id
        left join sys_role r on r.id = ur.role_id
        <where>
            <if test="userDto.realName!=null and userDto.realName!=''">
                and u.real_name like concat('%',#{userDto.realName},'%')
            </if>
            <if test="userDto.email!=null and userDto.email!=''">
                and u.email like concat('%',#{userDto.email},'%')
            </if>
            <if test="userDto.mobile!=null and userDto.mobile!=''">
                and u.mobile=#{userDto.mobile}
            </if>
            <if test="userDto.deptNo!=null and userDto.deptNo!=''">
                and u.dept_no like concat(#{userDto.deptNo},'%')
            </if>
            <if test="userDto.roleId!=null and userDto.roleId!=''">
                and u.id IN (SELECT ur.user_id FROM sys_user_role ur WHERE ur.role_id = #{userDto.roleId})
            </if>
            <if test="userDto.dataState!=null and userDto.dataState!=''">
                and u.data_state=#{userDto.dataState}
            </if>
            <if test="userDto.postNo!=null and userDto.postNo!=''">
                and u.post_no = #{userDto.postNo}
            </if>
        </where>
        order by u.create_time desc
    </select>
</mapper>